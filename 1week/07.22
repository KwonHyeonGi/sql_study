## 07.21 학습 ( 07.22실행 ) 
## 데이터 정렬 : order by 
  asc : 오름차순(기본정렬임 안적어도 됨 그냥 order by 만 해도 됨)
  desc : 내림차순
    ex) select * from users order by name asc; -> name이 오름차순으로 나옴
      ** , <-를 사용해서 칼럼별 오름,내림차순 설정 가능 
        ex) select * from users order by name asc, age desc; ->  name은 오름차순, age는 내림차순

## 결과 갯수 제한  : limit, offset
  limit : 조회하는 상위 N개만 조회
  offset : limit을 통해 조회하려는 결과에서 설정한 offset의 수 만큼 건너뛰고 조회
    ex) select * from users age limit 2 -> age가 높은 상위 2명만 나옴
    ex) select * from user age limit 3 offset 2 -> age가 상위 2명을 넘기고 그다음부터의 3명이 조회됨

## 중복 제거 : DISTINCT
  DISTINCT : 칼럼에서의 중복 내역을 제거시키고 조회시켜줌
  ** 그냥 그 칼럼만 검색하는것과 다른 점
    ex) id	name	age	city	gender
        1	김철수	30	Seoul	Male
        2	이영희	24	Busan	Female
        3	박민준	35	Tokyo	Male
        4	최수현	29	Osaka	Female
        5	김철수	41	Seoul	Male
        6	강은비	27	Busan	Female
        7	이영희	33	Tokyo	Female
        8	임지현	25	Osaka	Female
  라는 데이터가 있을 경우
   select name from users -> 를 할경우 김철수, 이영희, 박민준, 최수현, 김철수, 강은비, 이영희, 임지현 -> 김철수, 이영희가 두번 조회됨.
    select distinct name from users -> 를 할 경우 김철수, 이영희, 박민준, 최수현, 강은비, 임지현 -> 중복은 피하고 조회됨. 


## 07.22 학습 
## 집계 함수
  count() -> *로 검색할 시 데이터의 갯수 조회해줌, 칼럼 넣으면 칼럼의 데이터 갯수 조회
  sum() -> 칼럼의 합 구해줌 (당연히 숫자만 가능)
  avg() -> 평균 구해줌 (당연히 숫자만 가능)
  max,min() -> 최대값과 최솟값에 있는 데이터 알려줌 (문자수도 가능)

## GROUP BY(그룹화)
  group by : 그룹화 하여 집계함
    ex) select gender, count(*) as 수 from
        users group by gender 
        -> gender라는 칼럼으로 그룹해서, gender와 모든 데이터를 조회, 카운트 한 값은 '수'로 나오게함.

  여러 칼럼으로 그룹화 해보기
    ex) select city, gender, count(*) as 거주인원 
        from users group by city, gender
        order by city, gender;

        -> city와 gender로 그룹해서 city, gender, 그리고 그 데이터 갯수 조회 후 city, gender는 오름차순으로 정렬
                ** city만 그룹화 했을 경우는 city 칼럼에 있는 데이터에 성별 갯수가 나오지만
                    city와 gender를 다 그룹화 했을 경우는 city, gender의 중복데이터도 포함되기에 더 자세히 나옴
                      ex) city만 그룹화 했을 경우 : busan female 5
                          둘다 그룹화 했을 경우 : busan female  4, busan male 1
                          이런 식이였음 (사실 둘다 검색해서 갯수화 했는데 city만 그룹하면 당연히 정보도 틀리게되지만 그룹화의 정의를 이해하기 위해서 해봄)

## Having 절
  where절과 비슷함, where은 테이블에서(?) 칼럼에서 직접적으로 조건을 건다면, having은 집계함수로 데이터가 조회되어있는 상태에서 조건을 거는 형태임.
  ex) select city, count(*) as 거주인원
      from users
      group by city
      Having count(*) >= 2;
        -> city로 그룹화 후, city와 그 데이터 조회, 나온 데이터에서 2이상만 결과 도출
      숫자형테이기에 >=, >, 등 사용 가능하지만 
      문자형인 경우 
        Having count(*) = Busan;   -> Busan이라는 city의 데이터 정보
        Having count(*) like 'B%';  -> B로 시작하는 city의 데이터 정보
        로 도출 가능.
 
